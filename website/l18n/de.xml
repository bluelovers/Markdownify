<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE dict>
<dict>
	<variable name="title">Markdownify: Der HTML-zu-Markdown Konvertierer für PHP</variable>
	<variable name="demoTitle">online Demo</variable>
	<variable name="trackerTitle">Bug-Tracker</variable>
	<variable name="downloadTitle">Download</variable>
	<variable name="svnTitle">Sourcecode</variable>
	<variable name="sf.netTitle">Projektseite auf SF.net</variable>
	<variable name="aboutTitle">Über Markdownify</variable>
	<variable name="aboutContent" applyFilter="MarkdownExtra, SmartyPants">
### Welche Vorteile bringt Markdownify?

[Markdown][] ist eine tolle Möglichkeit Inhalte für das Internet zu schreiben.
Ohne große Übung lässt sich damit ein leicht lesbarer Text schreiben, der nicht
durch HTML-Tags aufgebläht ist.

Aber dieser Nutzen kommt - wie bei so Vielem - natürlich mit einem Preis: Geschwindigkeitseinbußen
und erhöhte CPU last. Denn normalerweise müsste bei jedem Lesezugriff auf eine Webseite
das HTML neu generiert werden, es sei denn, man verwendet ein Cache-Mechanismus.

Das ist der Punkt, an dem *Markdownify* (ehemals `html2text.php`) ins Spiel kommt:
Es bietet einem die Möglichkeit, jeden Text als HTML zu speichern. D.h. konkret, dass Markdown
nur einmalig bei jeden Schreibzugriff aufgerufen wird - anschließend kann man getrost immer
den gespeicherten HTML Text ausliefern. Möchte man jetzt den Text ändern, dann will man
natürlich nicht plötzlich HTML anfassen müssen; hierfür setzt man *Markdownify* ein, und
konvertiert die HTML Ausgabe in Markdown um!

Da derartige Schreibzugriffe sehr viel seltener sind, als Lesezugriffe, kann einem Markdownify
**ohne jeglichen Cache einen großen Performance-Vorteil** bringen!

Ein *weiterer Vorteil* für ein CMS o.ä. liegt darin, dass lediglich ein Format in der
Datenbank gespeichert wird - HTML - und jeder Benutzer nun entscheiden könnte, welche
Art der Formatierung er bevorzugt: Einfaches HTML, einen Wysiwyg-Editor oder aber Markdown.

### Und was verliere ich dadurch?

 *  [PHP Markdown Extra][] bietet eine Möglichkeit, Abkürzungen (`&lt;abbr>`) darzustellen. `Markdownify_Extra`
	konvertiert diese, allerdings wird es bei folgendem Input zu Problemen kommen:

	    &lt;p>&lt;abbr title="Definition 1">ABKÜRZUNG&lt;/abbr>&lt;/p>
	
	    &lt;p>&lt;abbr title="Definition 2">ABKÜRZUNG&lt;/abbr>&lt;/p>
	
	Wie z.B. auf der [Demoseite][demo] zu sehen ist (nicht vergessen, Markdownify Extra zu aktivieren), wird
	lediglich die erste Definition der Abkürzung berücksichtigt. Irgendwo ist das ja auch logisch,
	schließlich sollte eine Abkürzung immer dieselbe Definition erhalten!

### Technisches

**Status:** Markdownify befindet sich zur Zeit im **Beta** Status. Es fehlt noch die Unterstützung von
`Markdownify_Extra` für "Markdown in Blockelementen" und das Umbrechen von langen Textzeilen (_"wordwrapping").
Außerdem steht noch ein Code-Review mit möglichem Refactoring und hoffentlich noch einigen Performance-Verbesserungen.

Markdownify ist in [PHP][] entwickelt und sollte ab PHP 4.3 laufen. Als Grundlage für das *"Test Driven
Development"* (TDD) wurden die Testtexte aus [MDTest][] benutzt. Für die Konvertierung von Markdown in
HTML benutzt man am Besten [Michel Fortin's][mf] [PHP Markdown][] bzw. [PHP Markdown Extra][].

#### Wie man Markdownify benutzt

Einfacher geht es kaum:

    &lt;?php
	require_once 'markdownify.php';
	$md = new Markdownify;
	echo $md->parseString($htmlInput);

Und _ja_ - **PHP Markdown Extra wird von Markdownify unterstützt!**. Dazu verwendet man einfach die
`Markdownify_Extra` Klasse.

Optional lassen sich dem Konstruktor der Klasse einige Konfigurationen übergeben:

* Der erste Parameter ist ein Boolean und entscheidet darüber, ob Linkdefinitionen nach jedem Blockelement
ausgegeben werden sollen. Standard ist hier `false`.
* Der zweite Parameter ist eine Zahl (oder `false`) und gibt die Breite der Ausgabe an. Es wird versucht
diesen dann auf die gegebene Breite zu beschränken. **Dieses Feature ist noch nicht fertig!**
* Der letzte Parameter ist erneut ein Boolean und gibt an, ob nicht-konvertierbare HTML-Elemente in der
Ausgabe eingeschlossen werden sollen, oder ob diese vernachlässigt werden sollen. Standard ist `true`.

### Lizenz

Markdownify ist unter der [LGPL][] veröffentlicht, d.h. jeder darf es völlig kostenfrei benutzen
und in seine eigenen Projekte einbinden! [Open Source][] macht es möglich.

### Autor

Markdownify wird von [Milian Wolff][] entwickelt, einem Physikstudenten aus Berlin. Seit Jahren widmet
er sich der Webentwicklung und veröffentlicht seine Werke unter freien Lizenzen. Hier seien einige Wege
um mit ihm in Kontakt zu treten auflistet:

Email:
: &lt;mail@milianw.de>

Jabber:
: milianw@amessage.de

MSN:
: msn@milianw.de

ICQ:
: 201408577

*[CMS]: Content Management System
*[Wysiwyg]: What you see is what you get
 [Markdown]: http://daringfireball.com/projects/markdown "Die Markdown-Projektseite von John Gruber"
 [PHP]: http://php.net
 [mf]: http://michelf.com
 [PHP Markdown]: http://michelf.com/projects/php-markdown
 [PHP Markdown Extra]: http://michelf.com/projects/php-markdown/extra
 [demo]: demo.php "Probieren Sie Markdownify online aus!"
 [LGPL]: http://www.gnu.org/licenses/lgpl.html "GNU Lesser General Public License"
 [Open Source]: http://www.opensource.org/ "Die Open Source Initiative"
 [MDTest]: http://git.michelf.com/mdtest/
 [Milian Wolff]: http://milianw.de "Die Webseite von Milian Wolff besuchen"
	</variable>
	<variable name="convertLabel">Konvertiere zu Markdown!</variable>
	<variable name="keepHTML">HTML Tags beibehalten</variable>
	<variable name="leap">Linkdefinitionen nach jedem Blockelement ausgeben</variable>
	<variable name="Input">Eingabe</variable>
	<variable name="inputType">Eingabe-Formatierung</variable>
	<variable name="htmlInput">HTML Eingabe</variable>
	<variable name="mdInput">Markdown Eingabe</variable>
	<variable name="extra">Markdownify Extra</variable>
	<variable name="mdParsed">Konvertiert nach Markdown</variable>
	<variable name="htmlParsed">Konvertiert nach HTML</variable>
	<variable name="htmlOutput">HTML Ausgabe</variable>
	<variable name="mdOutput">Markdown Ausgabe</variable>
	<variable name="footer" applyFilter="MarkdownExtra">die verwendeten Icons stammen aus dem [Oxygen Projekt](http://oxygen-icons.org) und unterliegen der [Creative Commons Attribution-Share Alike 3.0 Unported](http://creativecommons.org/licenses/by-sa/3.0/) Lizenz</variable>
	<variable name="demo_options">Optionen</variable>
	<variable name="donate">Wenn Sie Markdownify mögen und mir danken möchten - bitte spenden Sie etwas!</variable>
</dict>